plugins {
    id 'pl.allegro.tech.build.axion-release' version '1.14.1'
}

group 'com.rundeck'

ext.rundeckPluginVersion = '1.2'
ext.pluginClassNames=
        'com.rundeck.plugins.azure.plugin.AzureResourceModelSourceFactory,com.rundeck.plugins.azure.plugin.AzureFileStoragePlugin,com.rundeck.plugins.azure.plugin.AzureStorageCopyStepPlugin,com.rundeck.plugins.azure.plugin.AzureStorageListStepPlugin,com.rundeck.plugins.azure.plugin.AzureStorageDeleteStepPlugin,com.rundeck.plugins.azure.plugin.AzureVMCreatePlugin,com.rundeck.plugins.azure.plugin.AzureVmStartPlugin,com.rundeck.plugins.azure.plugin.AzureVmStopPlugin,com.rundeck.plugins.azure.plugin.AzureVmListPlugin'
ext.pluginName = 'Azure Rundeck Plugin'
ext.pluginDescription = 'Azure Plugin integrates Rundeck with Azure Virtual Machines and Azure Storage. The plugin contains a Resource Model plugin, an Execution Log Storage plugin, and others plugin steps like Create/Start/Stop Azure VMs.'

apply plugin: 'groovy'
apply plugin: 'java'

sourceCompatibility = 1.8

scmVersion {
    tag {
        prefix = ''
        versionSeparator = ''
    }
}
project.version = scmVersion.version

repositories {
    mavenCentral()
    mavenLocal()
}



configurations {
    pluginLibs

    implementation {
        extendsFrom pluginLibs
    }
}

dependencies {
    implementation 'org.codehaus.groovy:groovy-all:3.0.9'
    implementation group: 'org.rundeck', name: 'rundeck-core', version: '4.3.+'

    pluginLibs (group: 'com.microsoft.azure', name: 'azure', version: '1.41.4'){
        exclude group: "com.fasterxml.jackson.core"
        exclude group: "net.minidev", module: "json-smart"
        exclude group: 'com.google.guava', module: 'guava'
    }
    pluginLibs (group: 'com.microsoft.azure', name: 'azure-storage', version: '8.6.6') {
        exclude group: "com.fasterxml.jackson.core"
        exclude group: "net.minidev", module: "json-smart"
        exclude group: 'com.google.guava', module: 'guava'
    }
    pluginLibs group: 'commons-net', name: 'commons-net', version: '3.9.0'
    pluginLibs group: 'commons-io', name: 'commons-io', version: '2.12.0'

    // https://mvnrepository.com/artifact/com.microsoft.azure/azure-keyvault-core
    pluginLibs (group: 'com.microsoft.azure', name: 'azure-keyvault-core', version: '1.0.0') {
        exclude group: 'com.google.guava', module: 'guava'
    }

    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    testImplementation "org.codehaus.groovy:groovy-all:3.0.9"
    testImplementation "org.spockframework:spock-core:2.0-groovy-3.0"
    testImplementation "cglib:cglib-nodep:2.2.2"
    testImplementation 'org.objenesis:objenesis:1.4'

    constraints {
        pluginLibs("com.squareup.retrofit2:adapter-rxjava:2.9.0")  {
            because "retrofit version by azure affected by CVE-2018-1000844"
        }
        pluginLibs ('com.nimbusds:nimbus-jose-jwt:9.31') {
            because "CVE-2023-1370, CVE-2021-31684"
        }
    }

}

task copyToLib(type: Copy) {
    into "$buildDir/output/lib"
    from configurations.pluginLibs
}

jar {
    from "$buildDir/output"
    manifest {
        def libList = configurations.pluginLibs.collect{'lib/' + it.name}.join(' ')
        attributes 'Rundeck-Plugin-Name' : pluginName
        attributes 'Rundeck-Plugin-Description' : pluginDescription
        attributes 'Rundeck-Plugin-Rundeck-Compatibility-Version': '2.8.2+'
        attributes 'Rundeck-Plugin-Tags': 'java,executor file storage,resource model,workflow step,azure'
        attributes 'Rundeck-Plugin-License': 'Apache 2.0'
        attributes 'Rundeck-Plugin-Source-Link': 'https://github.com/rundeck-plugins/rundeck-azure-plugin'
        attributes 'Rundeck-Plugin-Target-Host-Compatibility': 'all'
        attributes 'Rundeck-Plugin-Author': 'Rundeck, Inc.'
        attributes 'Rundeck-Plugin-Classnames': pluginClassNames
        attributes 'Rundeck-Plugin-File-Version': project.version
        attributes 'Rundeck-Plugin-Version': rundeckPluginVersion
        attributes 'Rundeck-Plugin-Archive': 'true'
        attributes 'Rundeck-Plugin-Libs': "${libList}"
    }
    dependsOn(copyToLib)
}

